class Solution {
public:
    int minSwapsCouples(vector<int>& row) {
        int n=row.size()/2;
        vector<int> parent(n); //宣告大小為n的父節點
        iota(parent.begin(),parent.end(),0); //起始值為0，依序+直到結束
        function<int(int)> find = [&](int x) { //一個接收int回傳int之Function 物件

            return parent[x] == x ? x : parent[x] = find(parent[x]); //往上找到直到指向自己
        };

        auto unite = [&](int x,int y){ // 合併集合
            parent[find(x)] = find(y);
        };

        for(int i = 0;i<row.size();i+=2){
            int a = row[i]/2;  // 計算該人屬於哪一對情侶
            int b = row[i+1]/2;
            unite(a,b); 
        }
        int cycles = 0;
        for(int i=0;i<n;i++){
            if(find(i)==i){
                cycles++;
            }
        }
        return n-cycles;
    }
};
